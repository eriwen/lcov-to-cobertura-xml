[tox]
envlist = py3{6,7,8,9}-{linux,macos,windows}
skip_missing_interpreters = true
skipsdist = true

[gh-actions]
python =
    3.6: py36
    3.7: py37
    3.8: py38
    3.9: py39

[gh-actions:env]
PLATFORM =
    ubuntu-20.04: linux
    macos-latest: macos
    windows-latest: windows

[base]
deps =
    pip>=20.3

[build]
deps =
    pip>=20.3
    wheel
    build
    twine

[testenv]
allowlist_externals = bash
passenv =
    CI
    OS
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    -e .[test,cov]

commands =
    # use --capture=no to see test runner output/results
    pytest -v . --capture=no --doctest-modules --cov lcov_cobertura --cov-branch --cov-report term-missing
    coverage xml
    #bash -c './.github/fix_pkg_name.sh'

[testenv:docs]
skip_install = true
allowlist_externals =
    make

deps =
    {[base]deps}
    .[doc]

commands = make -C docs html

[testenv:docs-lint]
skip_install = true
allowlist_externals =
    make

deps =
    {[base]deps}
    .[doc]

commands = make -C docs linkcheck

[testenv:lint]
passenv =
    CI
    OS
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    pylint

commands =
    pylint --fail-under=9.00 lcov_cobertura/lcov_cobertura.py

[testenv:style]
passenv =
    CI
    OS
    PIP_DOWNLOAD_CACHE

deps =
    {[base]deps}
    flake8
    flake8-bugbear

commands =
    flake8 lcov_cobertura/

[testenv:deploy]
skip_install = true
passenv =
    pythonLocation
    CI
    PYTHONIOENCODING
    PIP_DOWNLOAD_CACHE

deps =
    {[build]deps}

commands =
    python -m build .
    twine check dist/*

[testenv:check]
skip_install = true
passenv = CI

allowlist_externals = bash

deps =
    {[base]deps}

commands =
    pip install lcov_cobertura --force-reinstall --pre --prefer-binary -f dist/
    lcov_cobertura --version

[testenv:mypy]
skip_install = true

setenv = PYTHONPATH = {toxinidir}

deps =
    {[base]deps}
    mypy

commands =
    python -m mypy --follow-imports=normal --install-types --non-interactive lcov_cobertura/

[testenv:changes]
skip_install = true

allowlist_externals = /bin/bash

deps =
    {[base]deps}
    gitchangelog @ https://github.com/sarnold/gitchangelog/releases/download/3.0.8/gitchangelog-3.0.8-py3-none-any.whl

commands =
    bash -c 'export GITCHANGELOG_CONFIG_FILENAME=".gitchangelog.rc"; \
        gitchangelog $(git tag --sort=taggerdate | tail -n2 | head -n1)..'
