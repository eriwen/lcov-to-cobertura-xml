name: Release

on:
  push:
    # release on tag push
    tags:
      - '*'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash
    env:
      PYTHONIOENCODING: utf-8
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-20.04]
        python-version: [3.9]

    steps:
    - name: Set git crlf/eol
      run: |
        git config --global core.autocrlf false
        git config --global core.eol lf

    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip wheel
        pip install tox tox-gh-actions

    - name: Build dist pkgs
      run: |
        tox -e deploy

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: dist
        path: ./dist/

  create_release:
    name: Create Release
    needs: [build]
    environment: PyPI
    runs-on: ubuntu-20.04

    steps:
      - name: Get version
        id: get_version
        run: |
          echo "VERSION=${GITHUB_REF/refs\/tags\//}" >> $GITHUB_ENV
          echo ${{ env.VERSION }}

      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      # download all artifacts to project dir
      - uses: actions/download-artifact@v2

      - name: Generate changes file
        uses: sarnold/gitchangelog-action@master
        with:
          config_file: .gitchangelog.rc
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Create release
        id: create_release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.VERSION }}
          name: Release v${{ env.VERSION }}
          body_path: CHANGES.md
          draft: false
          prerelease: false
          files: |
            dist/*.whl

      - name: Publish a Python distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: dist/
